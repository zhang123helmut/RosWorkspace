<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="gui"        default="true"/>
  <arg name="scan_topic"      default="/scan"/> 
  <arg name="initial_pose_x"  default="-4.0"/>
  <arg name="initial_pose_y"  default="-3.5"/>
  <arg name="initial_pose_a"  default="0.0"/>
  
  <arg name="use_map_topic"   default="True"/>
  <arg name="odom_frame_id"   default="odom"/>
  <arg name="base_frame_id"   default="base_footprint"/>
  <arg name="global_frame_id" default="map"/>
  
  <arg name="map_file" default="$(find bringup)/map/mymap_1.yaml"/>
  <arg name="open_rviz" default="true"/>

  <arg name="world_file" default="$(find racecar_description)/worlds/parkplatz_04.world"/>
 
        <!--运行gazebo仿真环境-->
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="use_sim_time" value="true"/>
		<arg name="paused" value="false"/>
		<arg name="debug" value="false"/>
		<arg name="gui" value="$(arg gui)" />
		<arg name="world_name" value="$(arg world_file)"/>
	</include>
	
  <!-- 加载机器人模型描述参数 -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find racecar_description)/urdf/lastenpedelec.urdf.xacro'"/>

  <!--运行joint_state_publisher节点，发布机器人关节状态-->
  <!--<node name = "robot_state_publisher" pkg = "robot_state_publisher" type = "state_publisher">-->
	<node name= "robot_state_publisher" pkg= "robot_state_publisher" type= "robot_state_publisher">
		<param name="publish_frequency" type="double" value="20.0" />
		<remap from="/joint_states" to="/racecar/joint_states"/>
	</node>
	    <!-- 在gazebo中加载机器人模型-->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
            args="-urdf -model racecar -param robot_description -x $(arg initial_pose_x) -y $(arg initial_pose_y) -z $(arg initial_pose_a)"/> 


	 <!-- 从yaml文件加载联合控制器的参数 -->
	<rosparam file="$(find bringup)/config/ctrl.yaml" command="load"/>
	
	<!-- 加载控制器 spawner -->
	<node name="controller_manager" pkg="controller_manager" type="spawner" 
	      respawn="false" output="screen" ns="/racecar" 
	      args="left_rear_wheel_velocity_controller       right_rear_wheel_velocity_controller
	            left_front_wheel_velocity_controller      right_front_wheel_velocity_controller
	            left_steering_hinge_position_controller   right_steering_hinge_position_controller
	            joint_state_controller"/>


         <node pkg="racecar_description" type="servo_commands.py" name="servo_commands" output="screen">
</node>
 
         <node name="gazebo_odometry" pkg="racecar_description" type="gazebo_odometry.py"/> 


  <!-- *******************RTABMAP************************ -->
  <!--include file="$(find bringup)/launch/slam_3.launch">
  </include-->
  
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find bringup)/param/costmap_common_params.yaml" command="load" ns="global_costmap" /> 
    <rosparam file="$(find bringup)/param/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find bringup)/param/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find bringup)/param/global_costmap_params.yaml" command="load" /> 
    <rosparam file="$(find bringup)/param/teb_local_planner_params.yaml" command="load" />
    <rosparam file="$(find bringup)/param/move_base_params.yaml" command="load" />
    
    <param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS" />
    <param name="base_global_planner" value="global_planner/GlobalPlanner" />
    <param name="controller_frequency" value="10.0" />
    <param name="controller_patiente" value="15.0"/>
   </node>


   	<node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" output="screen">
                <param name="frame_id" value="map"/>
        </node>


   <node name="nav_sim" pkg="racecar_description" type="nav_sim.py" >
    </node>


  <node pkg="amcl" type="amcl" name="amcl">
      <param name="use_map_topic"             value="$(arg use_map_topic)"/>
      <!-- Publish scans from best pose at a max of 10 Hz -->
      <param name="odom_model_type"           value="diff"/>
      <param name="odom_alpha5"               value="0.1"/>
      <param name="gui_publish_rate"          value="10.0"/>
      <param name="laser_max_beams"           value="810"/>
      <param name="laser_max_range"           value="-1"/>
      <param name="min_particles"             value="500"/>
      <param name="max_particles"             value="5000"/>
      <param name="kld_err"                   value="0.05"/>
      <param name="kld_z"                     value="0.99"/>
      <param name="odom_alpha1"               value="0.2"/>
      <param name="odom_alpha2"               value="0.2"/>
      <!-- translation std dev, m -->
      <param name="odom_alpha3"               value="0.2"/>
      <param name="odom_alpha4"               value="0.2"/>
      <param name="laser_z_hit"               value="0.5"/>
      <param name="laser_z_short"             value="0.05"/>
      <param name="laser_z_max"               value="0.05"/>
      <param name="laser_z_rand"              value="0.5"/>
      <param name="laser_sigma_hit"           value="0.2"/>
      <param name="laser_lambda_short"        value="0.1"/>
      <param name="laser_model_type"          value="likelihood_field"/>
      <!-- <param name="laser_model_type" value="beam"/> -->
      <param name="laser_likelihood_max_dist" value="2.0"/>
      <param name="update_min_d"              value="0.1"/>
      <param name="update_min_a"              value="0.2"/>
      <param name="odom_frame_id"             value="$(arg odom_frame_id)"/> 
      <param name="base_frame_id"             value="$(arg base_frame_id)"/> 
      <param name="global_frame_id"           value="$(arg global_frame_id)"/>
      <param name="resample_interval"         value="1"/>
      <!-- Increase tolerance because the computer can get quite busy -->
      <param name="transform_tolerance"       value="1.0"/>
      <param name="recovery_alpha_slow"       value="0.0"/>
      <param name="recovery_alpha_fast"       value="0.0"/>
      <param name="initial_pose_x"            value="$(arg initial_pose_x)"/>
      <param name="initial_pose_y"            value="$(arg initial_pose_y)"/>
      <param name="initial_pose_a"            value="$(arg initial_pose_a)"/>
      <remap from="/scan"                     to="$(arg scan_topic)"/>
      <remap from="/tf_static"                to="/tf_static"/>
    </node>
  
  
    <!--  **************** Visualisation ****************  -->
  <group if="$(arg open_rviz)"> 
    <node name="rviz" pkg="rviz" type="rviz"
       args="-d $(find bringup)/rviz/racecar_urdf.rviz" required="true"/>
  </group>
 </launch>
